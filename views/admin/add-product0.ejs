<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Image Cropper</title>
    <link rel="stylesheet" href="https://unpkg.com/cropperjs/dist/cropper.css">
    <style>
        .modal {
            display: none; 
            position: fixed; 
            z-index: 1; 
            left: 0; 
            top: 0; 
            width: 100%; 
            height: 100%; 
            overflow: auto; 
            background-color: rgb(0,0,0); 
            background-color: rgba(0,0,0,0.4); 
            padding-top: 60px; 
        }
        .modal-content {
            background-color: #fefefe;
            margin: 5% auto; 
            padding: 20px;
            border: 1px solid #888;
            width: 80%; 
        }
    </style>
</head>
<body>
    <label class="sign-form-label" for="form3Example4cd">Product Images</label>
    <div class="d-flex flex-row align-items-center mb-3">
        <div class="form-outline flex-fill mb-0">
            <label class="sign-form-label" for="form3Example4cd">Image 1</label>
            <input type="file" name="images" id="productImage1" onchange="openCropModal(1)" accept="image/*">
            <img id="imagePreview1" alt="" style="max-width: 100px; max-height: 100px; margin-top: 10px;">
        </div>
    </div>
    <div class="form-outline flex-fill mb-0">
        <label class="sign-form-label" for="form3Example4cd">Image 2</label>
        <input type="file" name="images" id="productImage2" onchange="openCropModal(2)" accept="image/*">
        <img id="imagePreview2" style="max-width: 100px; max-height: 100px; margin-top: 10px;">
    </div>
    <div class="form-outline flex-fill mb-0">
        <label class="sign-form-label" for="form3Example4cd">Image 3</label>
        <input type="file" name="images" id="productImage3" onchange="openCropModal(3)" accept="image/*">
        <img id="imagePreview3" style="max-width: 100px; max-height: 100px; margin-top: 10px;">
    </div>
    <span id="imageError" style="color: red;"></span>
    <div id="productError" class="px-2 my-2 text-center text-danger"></div>
    <div class="mb-3 mt-4 mb-lg-4 d-grid gap-2">
        <button type="submit" class="btn text-dark update">Save</button>
    </div>

    <!-- Modals for cropping images -->
    <div id="cropModal1" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeCropModal(1)">&times;</span>
            <img id="cropImage1" style="max-width: 100%;">
            <button onclick="cropImage(1)">Crop Image</button>
        </div>
    </div>
    <div id="cropModal2" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeCropModal(2)">&times;</span>
            <img id="cropImage2" style="max-width: 100%;">
            <button onclick="cropImage(2)">Crop Image</button>
        </div>
    </div>
    <div id="cropModal3" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeCropModal(3)">&times;</span>
            <img id="cropImage3" style="max-width: 100%;">
            <button onclick="cropImage(3)">Crop Image</button>
        </div>
    </div>

    <script src="https://unpkg.com/cropperjs/dist/cropper.js"></script>
    <script src="script.js"></script>
</body>
</html>
document.addEventListener('DOMContentLoaded', function () {
    let cropper;
    let currentImageIndex;

    // Function to open the crop modal
    window.openCropModal = function(index) {
        currentImageIndex = index;
        const input = document.getElementById(`productImage${index}`);
        const cropImage = document.getElementById(`cropImage${index}`);
        
        if (input.files && input.files.length > 0) {
            const file = input.files[0];
            const reader = new FileReader();
            reader.onload = function (e) {
                cropImage.src = e.target.result;
                if (cropper) {
                    cropper.destroy();
                }
                cropper = new Cropper(cropImage, {
                    aspectRatio: 1,
                    viewMode: 1,
                });
                document.getElementById(`cropModal${index}`).style.display = "block";
            };
            reader.readAsDataURL(file);
        }
    }

    // Function to close the crop modal
    window.closeCropModal = function(index) {
        document.getElementById(`cropModal${index}`).style.display = "none";
        if (cropper) {
            cropper.destroy();
            cropper = null;
        }
    }

    // Function to crop the image
    window.cropImage = function(index) {
        if (cropper) {
            const canvas = cropper.getCroppedCanvas();
            const croppedImage = document.getElementById(`imagePreview${index}`);
            croppedImage.src = canvas.toDataURL();
            closeCropModal(index);
        }
    }
});
