


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Sales Dashboard</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
  <div style="width: 75%; margin: auto;">
    <h2>Sales Report</h2>
    <select id="reportType">
      <option value="daily">Daily</option>
      <option value="weekly">Weekly</option>
      <option value="monthly">Monthly</option>
      <option value="custom">Custom</option>
    </select>
    <div id="customDateRange" style="display: none;">
      <input type="date" id="startDate">
      <input type="date" id="endDate">
      <button onclick="fetchCustomReport()">Get Custom Report</button>
    </div>
    <canvas id="salesChart" width="400" height="200"></canvas>
  </div>

  <script>
    document.getElementById('reportType').addEventListener('change', function() {
      const reportType = this.value;
      if (reportType === 'custom') {
        document.getElementById('customDateRange').style.display = 'block';
      } else {
        document.getElementById('customDateRange').style.display = 'none';
        fetchReport(reportType);
      }
    });

    const fetchReport = async (reportType) => {
      const response = await fetch(`/sales-report/${reportType}`);
      const data = await response.json();
      updateChart(data);
    };

    const fetchCustomReport = async () => {
      const startDate = document.getElementById('startDate').value;
      const endDate = document.getElementById('endDate').value;
      const response = await fetch('/sales-report/custom', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ startDate, endDate })
      });
      const data = await response.json();
      updateChart(data);
    };

    const updateChart = (data) => {
      const ctx = document.getElementById('salesChart').getContext('2d');
      new Chart(ctx, {
        type: 'bar',
        data: {
          labels: ['Total Sales', 'Total Orders'],
          datasets: [{
            label: 'Sales Report',
            data: [data.totalSales, data.totalOrders],
            backgroundColor: ['rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)'],
            borderColor: ['rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)'],
            borderWidth: 1
          }]
        },
        options: {
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });
    };

    // Initial fetch for daily report
    fetchReport('daily');
  </script>
</body>
</html>
